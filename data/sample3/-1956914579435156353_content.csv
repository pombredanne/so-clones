"Content"
"    import Security&#xD;&#xA;    class ZLKeychainService: NSObject {&#xD;&#xA;        var service = """"""""Service""""""""&#xD;&#xA;        var keychainQuery :[NSString: AnyObject]! = nil&#xD;&#xA;        func save(name name: NSString, value: NSString) -> OSStatus? {&#xD;&#xA;            let statusAdd :OSStatus?&#xD;&#xA;            guard let dataFromString: NSData = value.dataUsingEncoding(NSUTF8StringEncoding) else {&#xD;&#xA;                return nil&#xD;&#xA;            }&#xD;&#xA;            keychainQuery = [&#xD;&#xA;                kSecClass       : kSecClassGenericPassword,&#xD;&#xA;                kSecAttrService : service,&#xD;&#xA;                kSecAttrAccount : name,&#xD;&#xA;                kSecValueData   : dataFromString]&#xD;&#xA;            if keychainQuery == nil {&#xD;&#xA;                return nil&#xD;&#xA;            }&#xD;&#xA;            SecItemDelete(keychainQuery as CFDictionaryRef)&#xD;&#xA;            statusAdd = SecItemAdd(keychainQuery! as CFDictionaryRef, nil)&#xD;&#xA;            return statusAdd;&#xD;&#xA;        }&#xD;&#xA;        func load(name name: NSString) -> String? {&#xD;&#xA;            var contentsOfKeychain :String?&#xD;&#xA;            keychainQuery = [&#xD;&#xA;                kSecClass       : kSecClassGenericPassword,&#xD;&#xA;                kSecAttrService : service,&#xD;&#xA;                kSecAttrAccount : name,&#xD;&#xA;                kSecReturnData  : kCFBooleanTrue,&#xD;&#xA;                kSecMatchLimit  : kSecMatchLimitOne]&#xD;&#xA;            if keychainQuery == nil {&#xD;&#xA;                return nil&#xD;&#xA;            }&#xD;&#xA;            var dataTypeRef: AnyObject?&#xD;&#xA;            let status: OSStatus = SecItemCopyMatching(keychainQuery, &dataTypeRef)&#xD;&#xA;            if (status == errSecSuccess) {&#xD;&#xA;                let retrievedData: NSData? = dataTypeRef as? NSData&#xD;&#xA;                if let result = NSString(data: retrievedData!, encoding: NSUTF8StringEncoding) {&#xD;&#xA;                    contentsOfKeychain = result as String&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;            else {&#xD;&#xA;                print(""""""""Nothing was retrieved from the keychain. Status code \(status)"""""""")&#xD;&#xA;            }&#xD;&#xA;            return contentsOfKeychain&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    //Test:&#xD;&#xA;    let userName = """"""""TestUser""""""""&#xD;&#xA;    let userValue: NSString = """"""""TestValue""""""""&#xD;&#xA;    print(""""""""userName: '\(userName)'"""""""")&#xD;&#xA;    print(""""""""userValue: '\(userValue)'"""""""")&#xD;&#xA;    let kcs = ZLKeychainService()&#xD;&#xA;    kcs.save(name:userName, value: userValue)&#xD;&#xA;    print(""""""""Keychain Query \(kcs.keychainQuery)"""""""")&#xD;&#xA;    if let recoveredToken = kcs.load(name:userName) {&#xD;&#xA;        print(""""""""Recovered Value: '\(recoveredToken)'"""""""")&#xD;&#xA;    }"
