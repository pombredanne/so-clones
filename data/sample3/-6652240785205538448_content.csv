"Content"
"    def tree_from_set(set) #set must be in order&#xD;&#xA;      buf = START_TAG(set[0])&#xD;&#xA;      stack = []&#xD;&#xA;      stack.push set[0]&#xD;&#xA;      set[1..-1].each do |node|&#xD;&#xA;        if stack.last.lft < node.lft < stack.last.rgt&#xD;&#xA;          if node.leaf? #(node.rgt - node.lft == 1)&#xD;&#xA;            buf << NODE_TAG(node)&#xD;&#xA;          else&#xD;&#xA;            buf << START_TAG(node)&#xD;&#xA;            stack.push(node)&#xD;&#xA;          end&#xD;&#xA;        else#&#xD;&#xA;          buf << END_TAG&#xD;&#xA;          stack.pop&#xD;&#xA;          retry&#xD;&#xA;        end&#xD;&#xA;      end&#xD;&#xA;      buf <<END_TAG&#xD;&#xA;    end&#xD;&#xA;    &#xD;&#xA;    def START_TAG(node) #for example&#xD;&#xA;      """"""""<li><p>#{node.name}</p><ul>""""""""&#xD;&#xA;    end&#xD;&#xA;    &#xD;&#xA;    def NODE_TAG(node)&#xD;&#xA;      """"""""<li><p>#{node.name}</p></li>""""""""&#xD;&#xA;    end&#xD;&#xA;    &#xD;&#xA;    def END_TAG&#xD;&#xA;      """"""""</li></ul>""""""""&#xD;&#xA;    end "
