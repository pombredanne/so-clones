"Content"
"      #routes.rb&#xD;&#xA;      resources :posts  do&#xD;&#xA;        resources :comments&#xD;&#xA;      end&#xD;&#xA;      #post.rb&#xD;&#xA;      has_many :comments&#xD;&#xA;      #comment.rb&#xD;&#xA;      belongs_to :post&#xD;&#xA;      #comments_controller.rb&#xD;&#xA;      before_action :set_post&#xD;&#xA;       &#xD;&#xA;      def create&#xD;&#xA;        @comment = @post.comments.create(comment_params)&#xD;&#xA;        redirect_to @post&#xD;&#xA;      end&#xD;&#xA;      &#xD;&#xA;      def destroy&#xD;&#xA;        @comment = @post.comments.find(params[:id])&#xD;&#xA;        if @comment.destroy&#xD;&#xA;          flash[:success] = """"""""Comment was deleted.""""""""&#xD;&#xA;        else&#xD;&#xA;          flash[:error] = """"""""Comment could not be deleted.""""""""&#xD;&#xA;        end&#xD;&#xA;        redirect_to @post&#xD;&#xA;      end&#xD;&#xA;      &#xD;&#xA;      private&#xD;&#xA;      &#xD;&#xA;      def set_post&#xD;&#xA;        @post = Post.find(params[:post_id])&#xD;&#xA;      end&#xD;&#xA;      &#xD;&#xA;      def comment_params&#xD;&#xA;        params[:comment].permit(:content)&#xD;&#xA;      end&#xD;&#xA;___&#xD;&#xA;    #posts_controller.rb&#xD;&#xA;    before_action :set_post, only: [:show, :edit, :update, :destroy]&#xD;&#xA;    &#xD;&#xA;      def index&#xD;&#xA;        @posts = Post.all&#xD;&#xA;      end&#xD;&#xA;    &#xD;&#xA;      def show&#xD;&#xA;      end&#xD;&#xA;    &#xD;&#xA;      def new&#xD;&#xA;        @post = Post.new&#xD;&#xA;      end&#xD;&#xA;    &#xD;&#xA;      def edit&#xD;&#xA;      end&#xD;&#xA;    &#xD;&#xA;      def create&#xD;&#xA;        @post = Post.new(post_params)&#xD;&#xA;    &#xD;&#xA;        respond_to do |format|&#xD;&#xA;          if @post.save&#xD;&#xA;            format.html { redirect_to @post, notice: 'Post was successfully created.' }&#xD;&#xA;            format.json { render :show, status: :created, location: @post }&#xD;&#xA;          else&#xD;&#xA;            format.html { render :new }&#xD;&#xA;            format.json { render json: @post.errors, status: :unprocessable_entity }&#xD;&#xA;          end&#xD;&#xA;        end&#xD;&#xA;      end&#xD;&#xA;    &#xD;&#xA;      def update&#xD;&#xA;        respond_to do |format|&#xD;&#xA;          if @post.update(post_params)&#xD;&#xA;            format.html { redirect_to @post, notice: 'Post was successfully updated.' }&#xD;&#xA;            format.json { render :show, status: :ok, location: @post }&#xD;&#xA;          else&#xD;&#xA;            format.html { render :edit }&#xD;&#xA;            format.json { render json: @post.errors, status: :unprocessable_entity }&#xD;&#xA;          end&#xD;&#xA;        end&#xD;&#xA;      end&#xD;&#xA;    &#xD;&#xA;      def destroy&#xD;&#xA;        @post.destroy&#xD;&#xA;        respond_to do |format|&#xD;&#xA;          format.html { redirect_to posts_url, notice: 'Post was successfully destroyed.' }&#xD;&#xA;          format.json { head :no_content }&#xD;&#xA;        end&#xD;&#xA;      end&#xD;&#xA;    &#xD;&#xA;      private&#xD;&#xA;        def set_post&#xD;&#xA;          @post = Post.find(params[:id])&#xD;&#xA;        end&#xD;&#xA;    &#xD;&#xA;        def post_params&#xD;&#xA;          params.require(:post).permit(:content)&#xD;&#xA;        end"
