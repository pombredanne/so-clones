"Content"
"    - (void)viewDidLoad {&#xD;&#xA;    [super viewDidLoad];&#xD;&#xA;    // Do any additional setup after loading the view.&#xD;&#xA;    //Controls whether the My Location dot and accuracy circle is enabled.&#xD;&#xA;    CGFloat currentZoom = 14.0f;&#xD;&#xA;    self.mapView.myLocationEnabled = YES;&#xD;&#xA;    &#xD;&#xA;    //adds type of map: kGMSTypeSatellite, kGMSTypeTerrain, kGMSTypeHybrid, kGMSTypeNormal&#xD;&#xA;    self.mapView.mapType = kGMSTypeHybrid;&#xD;&#xA;    &#xD;&#xA;    //Shows the compass button on the map&#xD;&#xA;    self.mapView.settings.compassButton = YES;&#xD;&#xA;    &#xD;&#xA;    //Shows the my location button on the map&#xD;&#xA;    self.mapView.settings.myLocationButton = YES;&#xD;&#xA;    &#xD;&#xA;    //Sets the view controller to be the GMSMapView delegate&#xD;&#xA;    self.mapView.delegate = self;&#xD;&#xA;    GMSCameraPosition *manhattan = [GMSCameraPosition cameraWithLatitude:40.790278&#xD;&#xA;                                                            longitude:-73.959722&#xD;&#xA;                                                                 zoom:14];&#xD;&#xA;    self.mapView.camera = manhattan;&#xD;&#xA;    }&#xD;&#xA;     //setting up zoom&#xD;&#xA;    -(void)ZoominOutMap:(CGFloat)level&#xD;&#xA;    {&#xD;&#xA;    self.mapView.delegate = self;&#xD;&#xA;    GMSCameraPosition *camera = [GMSCameraPosition cameraWithLatitude:40.790218 longitude:-73.959722&#xD;&#xA;                                                                 zoom:level];&#xD;&#xA;    self.mapView.camera = camera;&#xD;&#xA;    }&#xD;&#xA;    -(void)zoomInMapView:(id)sender&#xD;&#xA;    {&#xD;&#xA;    CGFloat currentZoom;&#xD;&#xA;    currentZoom = currentZoom + 1;&#xD;&#xA;    &#xD;&#xA;    [self ZoominOutMap:currentZoom];&#xD;&#xA;    }&#xD;&#xA;    -(void) zoomOutMapView:(id)sender&#xD;&#xA;    {&#xD;&#xA;    CGFloat currentZoom;&#xD;&#xA;    currentZoom = currentZoom - 1;&#xD;&#xA;    &#xD;&#xA;    [self ZoominOutMap:currentZoom];&#xD;&#xA;    }&#xD;&#xA;    - (void)mapView:(GMSMapView *)mapView didTapAtCoordinate:(CLLocationCoordinate2D)coordinate&#xD;&#xA;    {&#xD;&#xA;    NSLog(@""""""""You tapped at %f,%f"""""""", coordinate.latitude, coordinate.longitude);&#xD;&#xA;    GMSMarker *marker = [[GMSMarker alloc] init];&#xD;&#xA;    //adds animation for adding marker&#xD;&#xA;    marker.appearAnimation = kGMSMarkerAnimationPop;&#xD;&#xA;    //draw marker on tapped position&#xD;&#xA;    marker.position = CLLocationCoordinate2DMake(coordinate.latitude,coordinate.longitude);&#xD;&#xA;    marker.map = _mapView;&#xD;&#xA;    //set color of marker and make them draggable&#xD;&#xA;    marker.icon = [GMSMarker markerImageWithColor:[UIColor blueColor]];&#xD;&#xA;    [marker setDraggable: YES];&#xD;&#xA;    &#xD;&#xA;    // Create a rectangular path&#xD;&#xA;    GMSMutablePath *rect = [GMSMutablePath path];&#xD;&#xA;    [rect addCoordinate:CLLocationCoordinate2DMake(coordinate.latitude,coordinate.longitude)];&#xD;&#xA;    &#xD;&#xA;    // Create the polygon, and assign it to the map.&#xD;&#xA;    GMSPolygon *polygon = [GMSPolygon polygonWithPath:rect];&#xD;&#xA;    polygon.fillColor = [UIColor colorWithRed:0.25 green:0 blue:0 alpha:0.05];&#xD;&#xA;    polygon.strokeColor = [UIColor blackColor];&#xD;&#xA;    polygon.strokeWidth = 2;&#xD;&#xA;    polygon.map = _mapView;&#xD;&#xA;    }"
