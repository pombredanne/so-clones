"Content"
"    Public Function Unique(ByRef rngToCheck As range) As Variant&#xD;&#xA;     &#xD;&#xA;        Dim colDistinct As Collection&#xD;&#xA;        Dim varValues As Variant, varValue As Variant&#xD;&#xA;        Dim lngCount As Long, lngRow As Long, lngCol As Long&#xD;&#xA;     &#xD;&#xA;        On Error GoTo ErrorHandler&#xD;&#xA;     &#xD;&#xA;        varValues = rngToCheck.Value&#xD;&#xA;     &#xD;&#xA;        'if rngToCheck is more than 1 cell then&#xD;&#xA;       'varValues will be a 2 dimensional array&#xD;&#xA;       If IsArray(varValues) Then&#xD;&#xA;     &#xD;&#xA;            Set colDistinct = New Collection&#xD;&#xA;     &#xD;&#xA;            For lngRow = LBound(varValues, 1) To UBound(varValues, 1)&#xD;&#xA;                For lngCol = LBound(varValues, 2) To UBound(varValues, 2)&#xD;&#xA;     &#xD;&#xA;                    varValue = varValues(lngRow, lngCol)&#xD;&#xA;     &#xD;&#xA;                    'ignore blank cells and throw error&#xD;&#xA;                   'if cell contains an error value&#xD;&#xA;                   If LenB(varValue) > 0 Then&#xD;&#xA;     &#xD;&#xA;                        'if the item already exists then an error will&#xD;&#xA;                       'be thrown which we want to ignore&#xD;&#xA;                       On Error Resume Next&#xD;&#xA;                        colDistinct.Add vbNullString, CStr(varValue)&#xD;&#xA;                        On Error GoTo ErrorHandler&#xD;&#xA;     &#xD;&#xA;                    End If&#xD;&#xA;     &#xD;&#xA;                Next lngCol&#xD;&#xA;            Next lngRow&#xD;&#xA;     &#xD;&#xA;            lngCount = colDistinct.Count&#xD;&#xA;        Else&#xD;&#xA;            If LenB(varValues) > 0 Then&#xD;&#xA;                lngCount = 1&#xD;&#xA;            End If&#xD;&#xA;     &#xD;&#xA;        End If&#xD;&#xA;     &#xD;&#xA;        Unique = lngCount&#xD;&#xA;     &#xD;&#xA;        Exit Function&#xD;&#xA;     &#xD;&#xA;    ErrorHandler:&#xD;&#xA;        Unique = CVErr(xlErrValue)&#xD;&#xA;     &#xD;&#xA;    End Function"
