"Content"
"    - (MKCoordinateSpan)coordinateSpanWithMapView:(MKMapView *)mapView&#xD;&#xA;							 centerCoordinate:(CLLocationCoordinate2D)centerCoordinate&#xD;&#xA;								 andZoomLevel:(NSUInteger)zoomLevel&#xD;&#xA;    {&#xD;&#xA;    // convert center coordiate to pixel space&#xD;&#xA;    double centerPixelX = [self longitudeToPixelSpaceX:centerCoordinate.longitude];&#xD;&#xA;    double centerPixelY = [self latitudeToPixelSpaceY:centerCoordinate.latitude];&#xD;&#xA;    &#xD;&#xA;    // determine the scale value from the zoom level&#xD;&#xA;    NSInteger zoomExponent = 20 - zoomLevel;&#xD;&#xA;    double zoomScale = pow(2, zoomExponent);&#xD;&#xA;    &#xD;&#xA;    // scale the mapâ€™s size in pixel space&#xD;&#xA;    CGSize mapSizeInPixels = mapView.bounds.size;&#xD;&#xA;    double scaledMapWidth = mapSizeInPixels.width * zoomScale;&#xD;&#xA;    double scaledMapHeight = mapSizeInPixels.height * zoomScale;&#xD;&#xA;    &#xD;&#xA;    // figure out the position of the top-left pixel&#xD;&#xA;    double topLeftPixelX = centerPixelX - (scaledMapWidth / 2);&#xD;&#xA;    double topLeftPixelY = centerPixelY - (scaledMapHeight / 2);&#xD;&#xA;    &#xD;&#xA;    // find delta between left and right longitudes&#xD;&#xA;    CLLocationDegrees minLng = [self pixelSpaceXToLongitude:topLeftPixelX];&#xD;&#xA;    CLLocationDegrees maxLng = [self pixelSpaceXToLongitude:topLeftPixelX + scaledMapWidth];&#xD;&#xA;    CLLocationDegrees longitudeDelta = maxLng - minLng;&#xD;&#xA;    &#xD;&#xA;    // find delta between top and bottom latitudes&#xD;&#xA;    CLLocationDegrees minLat = [self pixelSpaceYToLatitude:topLeftPixelY];&#xD;&#xA;    CLLocationDegrees maxLat = [self pixelSpaceYToLatitude:topLeftPixelY + scaledMapHeight];&#xD;&#xA;    CLLocationDegrees latitudeDelta = -1 * (maxLat - minLat);&#xD;&#xA;    &#xD;&#xA;    // create and return the lat/lng span&#xD;&#xA;    MKCoordinateSpan span = MKCoordinateSpanMake(latitudeDelta, longitudeDelta);&#xD;&#xA;    return span;&#xD;&#xA;    }&#xD;&#xA;  "
