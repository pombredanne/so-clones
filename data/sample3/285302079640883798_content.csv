"Content"
"    from keras.models import Sequential&#xD;&#xA;    from keras.layers.convolutional import Conv3D&#xD;&#xA;    from keras.layers.convolutional_recurrent import ConvLSTM2D&#xD;&#xA;    from keras.layers.normalization import BatchNormalization&#xD;&#xA;    import numpy as np&#xD;&#xA;    import pylab as plt&#xD;&#xA;    from keras import layers&#xD;&#xA;    &#xD;&#xA;    # We create a layer which take as input movies of shape&#xD;&#xA;    # (n_frames, width, height, channels) and returns a movie&#xD;&#xA;    # of identical shape.&#xD;&#xA;    &#xD;&#xA;    model = Sequential()&#xD;&#xA;    model.add(ConvLSTM2D(filters=40, kernel_size=(3, 3),&#xD;&#xA;                       input_shape=(None, 64, 64, 1),&#xD;&#xA;                       padding='same', return_sequences=True))&#xD;&#xA;    model.add(BatchNormalization())&#xD;&#xA;    &#xD;&#xA;    model.add(ConvLSTM2D(filters=40, kernel_size=(3, 3),&#xD;&#xA;                       padding='same', return_sequences=True))&#xD;&#xA;    model.add(BatchNormalization())&#xD;&#xA;    &#xD;&#xA;    model.add(ConvLSTM2D(filters=40, kernel_size=(3, 3),&#xD;&#xA;                       padding='same', return_sequences=True))&#xD;&#xA;    model.add(BatchNormalization())&#xD;&#xA;    &#xD;&#xA;    model.add(ConvLSTM2D(filters=40, kernel_size=(3, 3),&#xD;&#xA;                       padding='same', return_sequences=True))&#xD;&#xA;    model.add(BatchNormalization())&#xD;&#xA;    &#xD;&#xA;    model.add(Conv3D(filters=1, kernel_size=(3, 3, 3),&#xD;&#xA;                   activation='sigmoid',&#xD;&#xA;                   padding='same', data_format='channels_last'))&#xD;&#xA;    model.compile(loss='binary_crossentropy', optimizer='adadelta')"
