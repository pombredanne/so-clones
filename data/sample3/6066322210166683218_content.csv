"Content"
"    public class JSONParser {&#xD;&#xA;      static InputStream is = null;&#xD;&#xA;      static JSONObject jObj = null;&#xD;&#xA;      static String json = """""""""""""""";&#xD;&#xA;      // constructor&#xD;&#xA;      public JSONParser() {&#xD;&#xA;      }&#xD;&#xA;      public JSONObject getJSONFromUrl(String url) {&#xD;&#xA;        // Making HTTP request&#xD;&#xA;        try {&#xD;&#xA;          // defaultHttpClient&#xD;&#xA;          DefaultHttpClient httpClient = new DefaultHttpClient();&#xD;&#xA;          HttpPost httpPost = new HttpPost(url);&#xD;&#xA;          HttpResponse httpResponse = httpClient.execute(httpPost);&#xD;&#xA;          HttpEntity httpEntity = httpResponse.getEntity();&#xD;&#xA;          is = httpEntity.getContent();&#xD;&#xA;        } catch (UnsupportedEncodingException e) {&#xD;&#xA;          e.printStackTrace();&#xD;&#xA;        } catch (ClientProtocolException e) {&#xD;&#xA;          e.printStackTrace();&#xD;&#xA;        } catch (IOException e) {&#xD;&#xA;          e.printStackTrace();&#xD;&#xA;        }&#xD;&#xA;        try {&#xD;&#xA;          BufferedReader reader = new BufferedReader(new InputStreamReader(&#xD;&#xA;            is, """"""""iso-8859-1""""""""), 8);&#xD;&#xA;          StringBuilder sb = new StringBuilder();&#xD;&#xA;          String line = null;&#xD;&#xA;          while ((line = reader.readLine()) != null) {&#xD;&#xA;            sb.append(line + """"""""\n"""""""");&#xD;&#xA;          }&#xD;&#xA;          is.close();&#xD;&#xA;          json = sb.toString();&#xD;&#xA;        } catch (Exception e) {&#xD;&#xA;          Log.e(""""""""Buffer Error"""""""", """"""""Error converting result """""""" + e.toString());&#xD;&#xA;        }&#xD;&#xA;        // try parse the string to a JSON object&#xD;&#xA;        try {&#xD;&#xA;          jObj = new JSONObject(json);&#xD;&#xA;        } catch (JSONException e) {&#xD;&#xA;          Log.e(""""""""JSON Parser"""""""", """"""""Error parsing data """""""" + e.toString());&#xD;&#xA;        }&#xD;&#xA;        // return JSON String&#xD;&#xA;        return jObj;&#xD;&#xA;      }&#xD;&#xA;      public JSONObject makeHttpRequest(String url, String method,&#xD;&#xA;        List < NameValuePair > params) {&#xD;&#xA;        // Making HTTP request&#xD;&#xA;        try {&#xD;&#xA;          // check for request method&#xD;&#xA;          if (method == """"""""POST"""""""") {&#xD;&#xA;            // request method is POST&#xD;&#xA;            // defaultHttpClient&#xD;&#xA;            DefaultHttpClient httpClient = new DefaultHttpClient();&#xD;&#xA;            HttpPost httpPost = new HttpPost(url);&#xD;&#xA;            httpPost.setEntity(new UrlEncodedFormEntity(params));&#xD;&#xA;            HttpResponse httpResponse = httpClient.execute(httpPost);&#xD;&#xA;            HttpEntity httpEntity = httpResponse.getEntity();&#xD;&#xA;            is = httpEntity.getContent();&#xD;&#xA;          } else if (method == """"""""GET"""""""") {&#xD;&#xA;            // request method is GET&#xD;&#xA;            DefaultHttpClient httpClient = new DefaultHttpClient();&#xD;&#xA;            String paramString = URLEncodedUtils.format(params, """"""""utf-8"""""""");&#xD;&#xA;            url += """"""""?"""""""" + paramString;&#xD;&#xA;            HttpGet httpGet = new HttpGet(url);&#xD;&#xA;            HttpResponse httpResponse = httpClient.execute(httpGet);&#xD;&#xA;            HttpEntity httpEntity = httpResponse.getEntity();&#xD;&#xA;            is = httpEntity.getContent();&#xD;&#xA;          }&#xD;&#xA;        } catch (UnsupportedEncodingException e) {&#xD;&#xA;          e.printStackTrace();&#xD;&#xA;        } catch (ClientProtocolException e) {&#xD;&#xA;          e.printStackTrace();&#xD;&#xA;        } catch (IOException e) {&#xD;&#xA;          e.printStackTrace();&#xD;&#xA;        }&#xD;&#xA;        try {&#xD;&#xA;          BufferedReader reader = new BufferedReader(new InputStreamReader(&#xD;&#xA;            is, """"""""iso-8859-1""""""""), 8);&#xD;&#xA;          StringBuilder sb = new StringBuilder();&#xD;&#xA;          String line = null;&#xD;&#xA;          while ((line = reader.readLine()) != null) {&#xD;&#xA;            sb.append(line + """"""""\n"""""""");&#xD;&#xA;          }&#xD;&#xA;          is.close();&#xD;&#xA;          json = sb.toString();&#xD;&#xA;        } catch (Exception e) {&#xD;&#xA;          Log.e(""""""""Buffer Error"""""""", """"""""Error converting result """""""" + e.toString());&#xD;&#xA;        }&#xD;&#xA;        // try parse the string to a JSON object&#xD;&#xA;        try {&#xD;&#xA;          jObj = new JSONObject(json);&#xD;&#xA;        } catch (JSONException e) {&#xD;&#xA;          Log.e(""""""""JSON Parser"""""""", """"""""Error parsing data """""""" + e.toString());&#xD;&#xA;        }&#xD;&#xA;        // return JSON String&#xD;&#xA;        return jObj;&#xD;&#xA;      }&#xD;&#xA;    }"
