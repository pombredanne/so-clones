"ContentNormalizedHash","ThreadCount","PostCount","ParentIds","PostIds","OwnerUserIds","OwnerDisplayNames","CreationDates","Scores","LineCount","Java","JavaScript","PHP","HTMLCSS","CSharp","Python","SQL","Swift","CPP","ObjectiveC","C","Ruby","VBA","R","Content","UniqueOwners","UniqueOwnerCount","ClonesWithinThreads","MedianScore","MedianTimeBetweenPosts","QuestionCount","AnswerCount","PostsPerOwner","QuestionRatio","AnswerRatio","Cluster"
"-7567882479870040844",2,2,"13512329;20627037","13512329;20627037","1844909;3093831",";","2012-11-22 11:59:27;2013-12-17 06:00:04","3;0",26,TRUE,TRUE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,"    <?xml version=""""1.0"""" encoding=""""utf-8""""?>&#xD;&#xA;    <LinearLayout&#xD;&#xA;      xmlns:android=""""http://schemas.android.com/apk/res/android""""&#xD;&#xA;      android:orientation=""""vertical""""&#xD;&#xA;      android:layout_width=""""match_parent""""&#xD;&#xA;      android:layout_height=""""match_parent"""">&#xD;&#xA;      <!-- Name Label -->&#xD;&#xA;      <TextView android:id=""""@+id/name_label""""&#xD;&#xA;                android:layout_width=""""fill_parent""""&#xD;&#xA;                android:layout_height=""""wrap_content""""&#xD;&#xA;                android:textSize=""""25dip""""&#xD;&#xA;                android:textStyle=""""bold""""&#xD;&#xA;                android:paddingTop=""""10dip""""&#xD;&#xA;                android:paddingBottom=""""10dip""""&#xD;&#xA;                android:textColor=""""#43bd00""""/>&#xD;&#xA;      <!-- Description Label -->&#xD;&#xA;      <TextView android:id=""""@+id/email_label""""&#xD;&#xA;                android:layout_width=""""fill_parent""""&#xD;&#xA;                android:layout_height=""""wrap_content""""&#xD;&#xA;                android:textColor=""""#acacac""""/>&#xD;&#xA;      <!-- Price Label -->&#xD;&#xA;      <TextView android:id=""""@+id/mobile_label""""&#xD;&#xA;          		android:layout_width=""""fill_parent""""&#xD;&#xA;          		android:layout_height=""""wrap_content""""&#xD;&#xA;          		android:textStyle=""""bold""""/>&#xD;&#xA;    </LinearLayout>","1844909;3093831",2,0,1.5,9354.01027777778,2,0,1,1,0,1
"8530674125071305856",2,2,"35934084;35933291","35934084;35933291","3243124;3243124",";","2016-03-11 07:00:09;2016-03-11 05:57:15","0;7",39,FALSE,TRUE,FALSE,TRUE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,"    {&#xD;&#xA;      entry: {&#xD;&#xA;        client: [&#xD;&#xA;          'webpack-dev-server/client?http://localhost:8080',&#xD;&#xA;          'webpack/hot/only-dev-server',&#xD;&#xA;          './client'&#xD;&#xA;        ]&#xD;&#xA;      },&#xD;&#xA;      output: {&#xD;&#xA;        path: join(rootDirectory, 'public'),&#xD;&#xA;        filename: 'bundle.js',&#xD;&#xA;        publicPath: ''&#xD;&#xA;      },&#xD;&#xA;      module: {&#xD;&#xA;        loaders: [&#xD;&#xA;          {&#xD;&#xA;            test: /\.js$/,&#xD;&#xA;            exclude: /node_modules/,&#xD;&#xA;            loader: 'babel'&#xD;&#xA;          }&#xD;&#xA;        ]&#xD;&#xA;      },&#xD;&#xA;      plugins: [&#xD;&#xA;        // new DefinePlugin({&#xD;&#xA;        //   'process.env': {&#xD;&#xA;        //     'NODE_ENV': JSON.stringify('development'),&#xD;&#xA;        //     'PORT': 8080,&#xD;&#xA;        //     'SERVER': false,&#xD;&#xA;        //     'CLIENT': true&#xD;&#xA;        //   }&#xD;&#xA;        // }),&#xD;&#xA;        new HTMLWebpackPlugin({&#xD;&#xA;          template: './index.tmp.html',&#xD;&#xA;          filename: 'index.html',&#xD;&#xA;          chunks: ['client']&#xD;&#xA;        }),&#xD;&#xA;        new webpack.HotModuleReplacementPlugin()&#xD;&#xA;      ]&#xD;&#xA;    }","3243124",1,0,3.5,1.04833333333333,2,0,2,1,0,1
"-8481030292389459817",2,2,"49704447;49706212","49704447;49706212","9066659;9611197",";","2018-04-07 06:05:45;2018-04-07 10:07:13","0;0",58,TRUE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,"    import com.fasterxml.jackson.annotation.JsonAutoDetect;&#xD;&#xA;    import com.fasterxml.jackson.annotation.JsonIgnore;&#xD;&#xA;    import com.fasterxml.jackson.annotation.JsonIgnoreProperties;&#xD;&#xA;    import com.fasterxml.jackson.annotation.JsonProperty;&#xD;&#xA;    import com.fasterxml.jackson.databind.annotation.JsonSerialize;&#xD;&#xA;    &#xD;&#xA;    import javax.persistence.*;&#xD;&#xA;    &#xD;&#xA;    @Entity&#xD;&#xA;    @Table(name=""""Business_Roles"""")&#xD;&#xA;    @JsonIgnoreProperties({""""hibernateLazyInitializer"""", """"handler""""})&#xD;&#xA;    public class BusinessRole {&#xD;&#xA;    &#xD;&#xA;        @Id&#xD;&#xA;        @GeneratedValue(strategy =GenerationType.AUTO)&#xD;&#xA;        private Long businessRoleId;&#xD;&#xA;    &#xD;&#xA;        @ManyToOne(cascade=CascadeType.ALL, fetch = FetchType.LAZY)&#xD;&#xA;        @JoinColumn(name=""""role"""")&#xD;&#xA;        private Roles roles;&#xD;&#xA;    &#xD;&#xA;        @ManyToOne(cascade=CascadeType.ALL, fetch = FetchType.LAZY)&#xD;&#xA;        @JoinColumn(name=""""business_id"""")&#xD;&#xA;        private Business business;&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;        public BusinessRole(){super();}&#xD;&#xA;    &#xD;&#xA;        public BusinessRole(Roles roles, Business business) {&#xD;&#xA;            this.roles = roles;&#xD;&#xA;            this.business = business;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public Long getBusinessRoleId() {&#xD;&#xA;            return businessRoleId;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public void setBusinessRoleId(Long businessRoleId) {&#xD;&#xA;            this.businessRoleId = businessRoleId;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public Roles getRoles() {&#xD;&#xA;            return roles;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public void setRoles(Roles roles) {&#xD;&#xA;            this.roles = roles;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public Business getBusiness() {&#xD;&#xA;            return business;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public void setBusiness(Business business) {&#xD;&#xA;            this.business = business;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    }","9066659;9611197",2,0,0,4.02444444444444,2,0,1,1,0,1
"3029782886926557356",2,3,"48274475;48274475;48252138","48274624;48274475;48252138","6807353;8914083;8914083",";;","2018-01-16 05:27:55;2018-01-16 05:09:34;2018-01-14 17:18:18","-1;-1;0",87,TRUE,FALSE,TRUE,FALSE,FALSE,FALSE,TRUE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,"        package localhost80.sample1;&#xD;&#xA;        import android.content.Context;&#xD;&#xA;        import android.os.AsyncTask;&#xD;&#xA;        import android.widget.Toast;&#xD;&#xA;        import org.apache.http.HttpResponse;&#xD;&#xA;        import org.apache.http.client.HttpClient;&#xD;&#xA;        import org.apache.http.client.methods.HttpGet;&#xD;&#xA;        import org.apache.http.impl.client.DefaultHttpClient;&#xD;&#xA;        import java.io.BufferedWriter;&#xD;&#xA;        import java.io.IOException;&#xD;&#xA;        import java.io.InputStream;&#xD;&#xA;        import java.io.OutputStream;&#xD;&#xA;        import java.io.OutputStreamWriter;&#xD;&#xA;        import java.net.HttpURLConnection;&#xD;&#xA;        import java.net.MalformedURLException;&#xD;&#xA;        import java.net.URI;&#xD;&#xA;        import java.net.URL;&#xD;&#xA;        import java.net.URLEncoder;&#xD;&#xA;        public class serverLinking extends AsyncTask<String, Void, String>&#xD;&#xA;        {&#xD;&#xA;    private String link;&#xD;&#xA;    private Context context;&#xD;&#xA;    private String ed,lno,par,pcs,mts,wt,ct,var,gw,fw,remarks,method;&#xD;&#xA;    public serverLinking(Context context)&#xD;&#xA;    {&#xD;&#xA;        this.context = context;&#xD;&#xA;    }&#xD;&#xA;    protected void onPreExecute()&#xD;&#xA;    {&#xD;&#xA;        super.onPreExecute();&#xD;&#xA;    }&#xD;&#xA;    @Override&#xD;&#xA;    protected String doInBackground(String... arg0)&#xD;&#xA;    {&#xD;&#xA;            method = arg0[11];&#xD;&#xA;            link = """"http://192.168.0.104/narmadaa_trial1/android/add.php"""";&#xD;&#xA;            if(method.equals(""""POST""""))&#xD;&#xA;            {&#xD;&#xA;                ed = arg0[0];&#xD;&#xA;                lno = arg0[1];&#xD;&#xA;                par = arg0[2];&#xD;&#xA;                pcs = arg0[3];&#xD;&#xA;                mts = arg0[4];&#xD;&#xA;                wt = arg0[5];&#xD;&#xA;                ct = arg0[6];&#xD;&#xA;                var = arg0[7];&#xD;&#xA;                gw = arg0[8];&#xD;&#xA;                fw = arg0[9];&#xD;&#xA;                remarks = arg0[10];&#xD;&#xA;                try&#xD;&#xA;                {&#xD;&#xA;                    URL url = new URL(link);&#xD;&#xA;                    HttpURLConnection httpURLConnection = (HttpURLConnection) url.openConnection();&#xD;&#xA;                    httpURLConnection.setRequestMethod(method);&#xD;&#xA;                    httpURLConnection.setDoOutput(true);&#xD;&#xA;                    OutputStream os = httpURLConnection.getOutputStream();&#xD;&#xA;                    BufferedWriter bufferedWriter = new BufferedWriter(new OutputStreamWriter(os,""""UTF-8""""));&#xD;&#xA;                    String data = URLEncoder.encode(""""ed"""",""""UTF-8"""")+""""=""""+URLEncoder.encode(""""lno"""",""""UTF-8"""")+""""=""""+URLEncoder.encode(""""par"""",""""UTF-8"""")+""""=""""+&#xD;&#xA;                            URLEncoder.encode(""""pcs"""",""""UTF-8"""")+""""=""""+URLEncoder.encode(""""mts"""",""""UTF-8"""")+""""=""""+URLEncoder.encode(""""wt"""",""""UTF-8"""")+""""=""""+&#xD;&#xA;                            URLEncoder.encode(""""ct"""",""""UTF-8"""")+""""=""""+URLEncoder.encode(""""var"""",""""UTF-8"""")+""""=""""+URLEncoder.encode(""""gw"""",""""UTF-8"""")+""""=""""+&#xD;&#xA;                            URLEncoder.encode(""""fw"""",""""UTF-8"""")+""""=""""+URLEncoder.encode(""""remarks"""",""""UTF-8"""");&#xD;&#xA;                    bufferedWriter.write(data);&#xD;&#xA;                    bufferedWriter.flush();&#xD;&#xA;                    bufferedWriter.close();&#xD;&#xA;                    os.close();&#xD;&#xA;                    InputStream IS = httpURLConnection.getInputStream();&#xD;&#xA;                    IS.close();&#xD;&#xA;                    return """"Data Added Successfully"""";&#xD;&#xA;                }&#xD;&#xA;                catch (MalformedURLException e){&#xD;&#xA;                    e.printStackTrace();&#xD;&#xA;                }&#xD;&#xA;                catch (IOException e){&#xD;&#xA;                    e.printStackTrace();&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;        return null;&#xD;&#xA;    }&#xD;&#xA;    protected void onPostExecute(String result)&#xD;&#xA;    {&#xD;&#xA;        Toast.makeText(context,result,Toast.LENGTH_LONG).show();&#xD;&#xA;    }&#xD;&#xA;    protected void onProgressUpdate(Void... values)&#xD;&#xA;    {&#xD;&#xA;        super.onProgressUpdate(values);&#xD;&#xA;    }&#xD;&#xA;        }","6807353;8914083",2,1,-1,18.0801388888889,2,1,1.5,0.666666666666667,0.333333333333333,1
"-7884111030018686121",2,2,"44339957;44339316","44339957;44339316","8105754;8105504",";","2017-06-03 03:31:55;2017-06-03 01:09:59","-1;1",158,TRUE,FALSE,FALSE,FALSE,FALSE,FALSE,TRUE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,"    package com.services.impl;&#xD;&#xA;    &#xD;&#xA;    import java.util.ArrayList;&#xD;&#xA;    import java.util.Calendar;&#xD;&#xA;    import java.util.Collection;&#xD;&#xA;    import java.util.List;&#xD;&#xA;    &#xD;&#xA;    import org.apache.commons.logging.Log;&#xD;&#xA;    import org.apache.commons.logging.LogFactory;&#xD;&#xA;    import org.springframework.dao.DataIntegrityViolationException;&#xD;&#xA;    import org.springframework.orm.ObjectRetrievalFailureException;&#xD;&#xA;    import org.springframework.security.authentication.encoding.ShaPasswordEncoder;&#xD;&#xA;    import org.springframework.security.core.GrantedAuthority;&#xD;&#xA;    import org.springframework.security.core.authority.SimpleGrantedAuthority;&#xD;&#xA;    import org.springframework.security.core.userdetails.User;&#xD;&#xA;    import org.springframework.security.core.userdetails.UserDetails;&#xD;&#xA;    import org.springframework.security.core.userdetails.UserDetailsService;&#xD;&#xA;    import org.springframework.security.core.userdetails.UsernameNotFoundException;&#xD;&#xA;    &#xD;&#xA;    import com.bo.security.Role;&#xD;&#xA;    import com.bo.security.Utilisateur;&#xD;&#xA;    import com.boudaa.dao.exceptions.EntityNotFoundException;&#xD;&#xA;    import com.dao.RoleDao;&#xD;&#xA;    import com.dao.UtilisateurDao;&#xD;&#xA;    import com.exceptions.DuplicateLoginException;&#xD;&#xA;    import com.services.UtilisateurService;&#xD;&#xA;    &#xD;&#xA;    public class UtilisateurServiceImpl implements UtilisateurService, UserDetailsService {&#xD;&#xA;    &#xD;&#xA;    	private UtilisateurDao userDao;&#xD;&#xA;    	private RoleDao roleDao;&#xD;&#xA;    &#xD;&#xA;    	protected final Log log = LogFactory.getLog(getClass());&#xD;&#xA;    &#xD;&#xA;    	public UserDetails loadUserByUsername(String pLogin) throws UsernameNotFoundException {&#xD;&#xA;    		Utilisateur lUser = null;&#xD;&#xA;    		Collection<GrantedAuthority> arrayAuths = new ArrayList<GrantedAuthority>();&#xD;&#xA;    &#xD;&#xA;    		// On rÃ©cupÃ¨re un objet de domaine de type User ayant comme login pLogin&#xD;&#xA;    		try {&#xD;&#xA;    			lUser = userDao.getUserByLogin(pLogin);&#xD;&#xA;    &#xD;&#xA;    		} catch (ObjectRetrievalFailureException ex) {&#xD;&#xA;    			ex.printStackTrace();&#xD;&#xA;    &#xD;&#xA;    			// nous relanÃ§ons une UsernameNotFoundException si aucun utilisateur&#xD;&#xA;    			// ne correspond Ã  cet login&#xD;&#xA;    			log.debug(""""Erreur d'authentification avec le login : """" + pLogin);&#xD;&#xA;    			throw new UsernameNotFoundException(""""User """" + pLogin + """" not exists"""", ex);&#xD;&#xA;    &#xD;&#xA;    		}&#xD;&#xA;    	&#xD;&#xA;    &#xD;&#xA;    		// Si un utilisateur correspond Ã  cet identifiant, nous en profitons&#xD;&#xA;    		// pour mettre Ã  jour sa date de derniÃ¨re connexion&#xD;&#xA;    		lUser.setLastAccessDate(Calendar.getInstance().getTime());&#xD;&#xA;    		userDao.update(lUser);&#xD;&#xA;    		// Il faut ensuite rÃ©cupÃ©rer les rÃ´les de lâ€™utilisateur et les&#xD;&#xA;    		// mettre&#xD;&#xA;    		// sous la forme de SimpleGrantedAuthority, une interface propre Ã &#xD;&#xA;    		// Spring&#xD;&#xA;    		// Security*&#xD;&#xA;    &#xD;&#xA;    		Role role = lUser.getRole();&#xD;&#xA;    		arrayAuths.add(new SimpleGrantedAuthority(role.getRoleName()));&#xD;&#xA;    		// /un User (classe Spring Security) est crÃ©Ã©&#xD;&#xA;    		System.out.println(""""oui"""");&#xD;&#xA;    		return new User(pLogin, lUser.getPassword(), lUser.isEnabled(), lUser.isAccountNotExpired(), true,&#xD;&#xA;    				lUser.isAccountNotLocked(), arrayAuths);&#xD;&#xA;    	}&#xD;&#xA;    	&#xD;&#xA;    	&#xD;&#xA;    	public Utilisateur getUserByLogin(String pLogin) throws EntityNotFoundException {&#xD;&#xA;    &#xD;&#xA;    		List<Utilisateur> users;&#xD;&#xA;    		try {&#xD;&#xA;    			users = userDao.getEntityByColumn(""""Utilisateur"""", """"login"""", pLogin);&#xD;&#xA;    &#xD;&#xA;    		} catch (ObjectRetrievalFailureException ex) {&#xD;&#xA;    &#xD;&#xA;    			throw new EntityNotFoundException(""""Aucun utilisateur avec le login : """" + pLogin);&#xD;&#xA;    		}&#xD;&#xA;    &#xD;&#xA;    		if (users.size() != 1) {&#xD;&#xA;    			// TODO : Ecrire le code pour ajouter des log fatal&#xD;&#xA;    			// TODO : ecrire le code envoyant un mail d'erreur fatal Ã &#xD;&#xA;    			// l'administrateur&#xD;&#xA;    &#xD;&#xA;    			throw new RuntimeException(""""Erreur inconnue dans le systeme"""");&#xD;&#xA;    		}&#xD;&#xA;    &#xD;&#xA;    		return users.get(0);&#xD;&#xA;    	}&#xD;&#xA;    	public void addUtilisateur(Utilisateur user) throws DuplicateLoginException {&#xD;&#xA;    &#xD;&#xA;    		// pour hacher avec SHA1&#xD;&#xA;    		ShaPasswordEncoder encoder = new ShaPasswordEncoder();&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    		// Hachage du mot de passe avec un gain de sel variable = login&#xD;&#xA;    		String cryptedPassword = encoder.encodePassword(user.getPassword(),&#xD;&#xA;    				user.getLogin());&#xD;&#xA;    &#xD;&#xA;    		// affecter le mot de passe hachÃ©&#xD;&#xA;    		user.setPassword(cryptedPassword);&#xD;&#xA;    &#xD;&#xA;    		// stockage de l'utilisateur dans la base de donnÃ©es&#xD;&#xA;    		try {&#xD;&#xA;    			userDao.create(user);&#xD;&#xA;    &#xD;&#xA;    		} catch (DataIntegrityViolationException ex) {&#xD;&#xA;    			log.error(""""erreur d'ajout d'un utilisateur Ã  cause de l'exception """" + ex&#xD;&#xA;    					+ """" . un utilisateur avec le login """" + user.getLogin() + """" existe dÃ©jÃ  dans la base de donnÃ©es"""");&#xD;&#xA;    			throw new DuplicateLoginException(""""Erreur d'inscription, login existe dÃ©jÃ """", ex);&#xD;&#xA;    		}&#xD;&#xA;    &#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	public Role getRoleByName(String roleName) {&#xD;&#xA;    		return roleDao.getRoleByName(roleName);&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	public Role getRoleById(Long pRoleId) throws EntityNotFoundException {&#xD;&#xA;    		return roleDao.findById(pRoleId);&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	public List<Utilisateur> getAllUsers() {&#xD;&#xA;    		return userDao.getAll();&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	public List<Role> getAllRoles() {&#xD;&#xA;    		return roleDao.getAll();&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	public void deleteUser(Utilisateur u) throws EntityNotFoundException {&#xD;&#xA;    &#xD;&#xA;    		userDao.delete(u.getIdUtilisateur());&#xD;&#xA;    &#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	public UtilisateurDao getUserDao() {&#xD;&#xA;    		return userDao;&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	public void setUserDao(UtilisateurDao userDao) {&#xD;&#xA;    		this.userDao = userDao;&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	public RoleDao getRoleDao() {&#xD;&#xA;    		return roleDao;&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	public void setRoleDao(RoleDao roleDao) {&#xD;&#xA;    		this.roleDao = roleDao;&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    }","8105754;8105504",2,0,0,2.36555555555556,2,0,1,1,0,1
"-1999207865668691066",2,2,"608872;22478530","608899;22478530","2915;3432890","Adam Davis;","2009-03-04 01:13:42;2014-03-18 11:50:24","12;0",57,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,TRUE,FALSE,"    option explicit&#xD;&#xA;    &#xD;&#xA;    Const vbext_ct_ClassModule = 2&#xD;&#xA;    Const vbext_ct_Document = 100&#xD;&#xA;    Const vbext_ct_MSForm = 3&#xD;&#xA;    Const vbext_ct_StdModule = 1&#xD;&#xA;    &#xD;&#xA;    Main&#xD;&#xA;    &#xD;&#xA;    Sub Main&#xD;&#xA;        Dim xl&#xD;&#xA;        Dim fs&#xD;&#xA;        Dim WBook&#xD;&#xA;        Dim VBComp&#xD;&#xA;        Dim Sfx&#xD;&#xA;        Dim ExportFolder&#xD;&#xA;    &#xD;&#xA;        If Wscript.Arguments.Count <> 1 Then&#xD;&#xA;            MsgBox """"As the only argument, give the FULL path to an XLS file to extract all the VBA from it.""""&#xD;&#xA;        Else&#xD;&#xA;    &#xD;&#xA;            Set xl = CreateObject(""""Excel.Application"""")&#xD;&#xA;            Set fs = CreateObject(""""Scripting.FileSystemObject"""")&#xD;&#xA;    &#xD;&#xA;            xl.Visible = true&#xD;&#xA;    &#xD;&#xA;            Set WBook = xl.Workbooks.Open(Trim(wScript.Arguments(0)))&#xD;&#xA;    &#xD;&#xA;            ExportFolder = WBook.Path & """"\"""" & fs.GetBaseName(WBook.Name)&#xD;&#xA;    &#xD;&#xA;            fs.CreateFolder(ExportFolder)&#xD;&#xA;    &#xD;&#xA;            For Each VBComp In WBook.VBProject.VBComponents&#xD;&#xA;                Select Case VBComp.Type&#xD;&#xA;                    Case vbext_ct_ClassModule, vbext_ct_Document&#xD;&#xA;                        Sfx = """".cls""""&#xD;&#xA;                    Case vbext_ct_MSForm&#xD;&#xA;                        Sfx = """".frm""""&#xD;&#xA;                    Case vbext_ct_StdModule&#xD;&#xA;                        Sfx = """".bas""""&#xD;&#xA;                    Case Else&#xD;&#xA;                        Sfx = """"""""&#xD;&#xA;                End Select&#xD;&#xA;                If Sfx <> """""""" Then&#xD;&#xA;                    On Error Resume Next&#xD;&#xA;                    Err.Clear&#xD;&#xA;                    VBComp.Export ExportFolder & """"\"""" & VBComp.Name & Sfx&#xD;&#xA;                    If Err.Number <> 0 Then&#xD;&#xA;                        MsgBox """"Failed to export """" & ExportFolder & """"\"""" & VBComp.Name & Sfx&#xD;&#xA;                    End If&#xD;&#xA;                    On Error Goto 0&#xD;&#xA;                End If&#xD;&#xA;            Next&#xD;&#xA;    &#xD;&#xA;            xl.Quit&#xD;&#xA;        End If&#xD;&#xA;    End Sub","2915;3432890",2,0,6,44170.6116666667,1,1,1,0.5,0.5,2
"684732236419912939",2,2,"5968737;26826711","5968737;26826711","736642;4199613",";","2011-05-11 18:17:30;2014-11-09 09:12:26","1;0",67,FALSE,TRUE,FALSE,TRUE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,"    function Pager(tableName, itemsPerPage) {&#xD;&#xA;    this.tableName = tableName;&#xD;&#xA;    this.itemsPerPage = itemsPerPage;&#xD;&#xA;    this.currentPage = 1;&#xD;&#xA;    this.pages = 0;&#xD;&#xA;    this.inited = false;&#xD;&#xA;    &#xD;&#xA;    this.showRecords = function(from, to) {        &#xD;&#xA;        var rows = document.getElementById(tableName).rows;&#xD;&#xA;        // i starts from 1 to skip table header row&#xD;&#xA;        for (var i = 1; i < rows.length; i++) {&#xD;&#xA;            if (i < from || i > to)  &#xD;&#xA;                rows[i].style.display = 'none';&#xD;&#xA;            else&#xD;&#xA;                rows[i].style.display = '';&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    this.showPage = function(pageNumber) {&#xD;&#xA;    	if (! this.inited) {&#xD;&#xA;    		alert(""""not inited"""");&#xD;&#xA;    		return;&#xD;&#xA;    	}&#xD;&#xA;        var oldPageAnchor = document.getElementById('pg'+this.currentPage);&#xD;&#xA;        oldPageAnchor.className = 'pg-normal';&#xD;&#xA;        &#xD;&#xA;        this.currentPage = pageNumber;&#xD;&#xA;        var newPageAnchor = document.getElementById('pg'+this.currentPage);&#xD;&#xA;        newPageAnchor.className = 'pg-selected';&#xD;&#xA;        &#xD;&#xA;        var from = (pageNumber - 1) * itemsPerPage + 1;&#xD;&#xA;        var to = from + itemsPerPage - 1;&#xD;&#xA;        this.showRecords(from, to);&#xD;&#xA;    }   &#xD;&#xA;    &#xD;&#xA;    this.prev = function() {&#xD;&#xA;        if (this.currentPage > 1)&#xD;&#xA;            this.showPage(this.currentPage - 1);&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    this.next = function() {&#xD;&#xA;        if (this.currentPage < this.pages) {&#xD;&#xA;            this.showPage(this.currentPage + 1);&#xD;&#xA;        }&#xD;&#xA;    }                        &#xD;&#xA;    &#xD;&#xA;    this.init = function() {&#xD;&#xA;        var rows = document.getElementById(tableName).rows;&#xD;&#xA;        var records = (rows.length - 1); &#xD;&#xA;        this.pages = Math.ceil(records / itemsPerPage);&#xD;&#xA;        this.inited = true;&#xD;&#xA;    }&#xD;&#xA;    this.showPageNav = function(pagerName, positionId) {&#xD;&#xA;    	if (! this.inited) {&#xD;&#xA;    		alert(""""not inited"""");&#xD;&#xA;    		return;&#xD;&#xA;    	}&#xD;&#xA;    	var element = document.getElementById(positionId);&#xD;&#xA;    	&#xD;&#xA;    	var pagerHtml = '<span onclick=""""' + pagerName + '.prev();"""" class=""""pg-normal""""> &#171 Prev </span> | ';&#xD;&#xA;        for (var page = 1; page <= this.pages; page++) &#xD;&#xA;            pagerHtml += '<span id=""""pg' + page + '"""" class=""""pg-normal"""" onclick=""""' + pagerName + '.showPage(' + page + ');"""">' + page + '</span> | ';&#xD;&#xA;        pagerHtml += '<span onclick=""""'+pagerName+'.next();"""" class=""""pg-normal""""> Next &#187;</span>';            &#xD;&#xA;        &#xD;&#xA;        element.innerHTML = pagerHtml;&#xD;&#xA;    }&#xD;&#xA;}","736642;4199613",2,0,0.5,30662.9155555556,2,0,1,1,0,2
"-1353226202234823939",2,2,"1416697;44099952","26036013;44099952","2684628;8044746",";","2014-09-25 10:15:04;2017-05-21 17:44:58","23;1",70,FALSE,FALSE,TRUE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,"    $time_elapsed = timeAgo($time_ago); //The argument $time_ago is in timestamp (Y-m-d H:i:s)format.&#xD;&#xA;    &#xD;&#xA;    //Function definition&#xD;&#xA;    &#xD;&#xA;    function timeAgo($time_ago)&#xD;&#xA;    {&#xD;&#xA;        $time_ago = strtotime($time_ago);&#xD;&#xA;        $cur_time   = time();&#xD;&#xA;        $time_elapsed   = $cur_time - $time_ago;&#xD;&#xA;        $seconds    = $time_elapsed ;&#xD;&#xA;        $minutes    = round($time_elapsed / 60 );&#xD;&#xA;        $hours      = round($time_elapsed / 3600);&#xD;&#xA;        $days       = round($time_elapsed / 86400 );&#xD;&#xA;        $weeks      = round($time_elapsed / 604800);&#xD;&#xA;        $months     = round($time_elapsed / 2600640 );&#xD;&#xA;        $years      = round($time_elapsed / 31207680 );&#xD;&#xA;        // Seconds&#xD;&#xA;        if($seconds <= 60){&#xD;&#xA;            return """"just now"""";&#xD;&#xA;        }&#xD;&#xA;        //Minutes&#xD;&#xA;        else if($minutes <=60){&#xD;&#xA;            if($minutes==1){&#xD;&#xA;                return """"one minute ago"""";&#xD;&#xA;            }&#xD;&#xA;            else{&#xD;&#xA;                return """"$minutes minutes ago"""";&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;        //Hours&#xD;&#xA;        else if($hours <=24){&#xD;&#xA;            if($hours==1){&#xD;&#xA;                return """"an hour ago"""";&#xD;&#xA;            }else{&#xD;&#xA;                return """"$hours hrs ago"""";&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;        //Days&#xD;&#xA;        else if($days <= 7){&#xD;&#xA;            if($days==1){&#xD;&#xA;                return """"yesterday"""";&#xD;&#xA;            }else{&#xD;&#xA;                return """"$days days ago"""";&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;        //Weeks&#xD;&#xA;        else if($weeks <= 4.3){&#xD;&#xA;            if($weeks==1){&#xD;&#xA;                return """"a week ago"""";&#xD;&#xA;            }else{&#xD;&#xA;                return """"$weeks weeks ago"""";&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;        //Months&#xD;&#xA;        else if($months <=12){&#xD;&#xA;            if($months==1){&#xD;&#xA;                return """"a month ago"""";&#xD;&#xA;            }else{&#xD;&#xA;                return """"$months months ago"""";&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;        //Years&#xD;&#xA;        else{&#xD;&#xA;            if($years==1){&#xD;&#xA;                return """"one year ago"""";&#xD;&#xA;            }else{&#xD;&#xA;                return """"$years years ago"""";&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    }","2684628;8044746",2,0,12,23263.4983333333,1,1,1,0.5,0.5,2
"3169797457013680401",2,2,"939778;8249146","3797621;8249146","155077;1062765",";","2010-09-26 11:42:34;2011-11-23 21:12:55","5;3",157,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,TRUE,FALSE,TRUE,FALSE,FALSE,FALSE,"    #ifndef __cplusplus&#xD;&#xA;        #define _GNU_SOURCE&#xD;&#xA;    #endif&#xD;&#xA;    &#xD;&#xA;    #include <unistd.h>&#xD;&#xA;    #include <dirent.h>&#xD;&#xA;    #include <sys/types.h> // for opendir(), readdir(), closedir()&#xD;&#xA;    #include <sys/stat.h> // for stat()&#xD;&#xA;    &#xD;&#xA;    #ifdef __cplusplus&#xD;&#xA;        #include <iostream>&#xD;&#xA;        #include <cstdlib>&#xD;&#xA;        #include <cstring>&#xD;&#xA;        #include <cstdarg>&#xD;&#xA;    #else&#xD;&#xA;        #include <stdio.h>&#xD;&#xA;        #include <stdlib.h>&#xD;&#xA;        #include <string.h>&#xD;&#xA;        #include <stdarg.h>&#xD;&#xA;    #endif&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    #define PROC_DIRECTORY """"/proc/""""&#xD;&#xA;    #define CASE_SENSITIVE    1&#xD;&#xA;    #define CASE_INSENSITIVE  0&#xD;&#xA;    #define EXACT_MATCH       1&#xD;&#xA;    #define INEXACT_MATCH     0&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    int IsNumeric(const char* ccharptr_CharacterList)&#xD;&#xA;    {&#xD;&#xA;        for ( ; *ccharptr_CharacterList; ccharptr_CharacterList++)&#xD;&#xA;            if (*ccharptr_CharacterList < '0' || *ccharptr_CharacterList > '9')&#xD;&#xA;                return 0; // false&#xD;&#xA;        return 1; // true&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    int strcmp_Wrapper(const char *s1, const char *s2, int intCaseSensitive)&#xD;&#xA;    {&#xD;&#xA;        if (intCaseSensitive)&#xD;&#xA;            return !strcmp(s1, s2);&#xD;&#xA;        else&#xD;&#xA;            return !strcasecmp(s1, s2);&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    int strstr_Wrapper(const char* haystack, const char* needle, int intCaseSensitive)&#xD;&#xA;    {&#xD;&#xA;        if (intCaseSensitive)&#xD;&#xA;            return (int) strstr(haystack, needle);&#xD;&#xA;        else&#xD;&#xA;            return (int) strcasestr(haystack, needle);&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    #ifdef __cplusplus&#xD;&#xA;    pid_t GetPIDbyName(const char* cchrptr_ProcessName, int intCaseSensitiveness, int intExactMatch)&#xD;&#xA;    #else&#xD;&#xA;    pid_t GetPIDbyName_implements(const char* cchrptr_ProcessName, int intCaseSensitiveness, int intExactMatch)&#xD;&#xA;    #endif&#xD;&#xA;    {&#xD;&#xA;        char chrarry_CommandLinePath[100]  ;&#xD;&#xA;        char chrarry_NameOfProcess[300]  ;&#xD;&#xA;        char* chrptr_StringToCompare = NULL ;&#xD;&#xA;        pid_t pid_ProcessIdentifier = (pid_t) -1 ;&#xD;&#xA;        struct dirent* de_DirEntity = NULL ;&#xD;&#xA;        DIR* dir_proc = NULL ;&#xD;&#xA;    &#xD;&#xA;        int (*CompareFunction) (const char*, const char*, int) ;&#xD;&#xA;    &#xD;&#xA;        if (intExactMatch)&#xD;&#xA;            CompareFunction = &strcmp_Wrapper;&#xD;&#xA;        else&#xD;&#xA;            CompareFunction = &strstr_Wrapper;&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;        dir_proc = opendir(PROC_DIRECTORY) ;&#xD;&#xA;        if (dir_proc == NULL)&#xD;&#xA;        {&#xD;&#xA;            perror(""""Couldn't open the """" PROC_DIRECTORY """" directory"""") ;&#xD;&#xA;            return (pid_t) -2 ;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        // Loop while not NULL&#xD;&#xA;        while ( (de_DirEntity = readdir(dir_proc)) )&#xD;&#xA;        {&#xD;&#xA;            if (de_DirEntity->d_type == DT_DIR)&#xD;&#xA;            {&#xD;&#xA;                if (IsNumeric(de_DirEntity->d_name))&#xD;&#xA;                {&#xD;&#xA;                    strcpy(chrarry_CommandLinePath, PROC_DIRECTORY) ;&#xD;&#xA;                    strcat(chrarry_CommandLinePath, de_DirEntity->d_name) ;&#xD;&#xA;                    strcat(chrarry_CommandLinePath, """"/cmdline"""") ;&#xD;&#xA;                    FILE* fd_CmdLineFile = fopen (chrarry_CommandLinePath, """"rt"""") ;  // open the file for reading text&#xD;&#xA;                    if (fd_CmdLineFile)&#xD;&#xA;                    {&#xD;&#xA;                        fscanf(fd_CmdLineFile, """"%s"""", chrarry_NameOfProcess) ; // read from /proc/<NR>/cmdline&#xD;&#xA;                        fclose(fd_CmdLineFile);  // close the file prior to exiting the routine&#xD;&#xA;    &#xD;&#xA;                        if (strrchr(chrarry_NameOfProcess, '/'))&#xD;&#xA;                            chrptr_StringToCompare = strrchr(chrarry_NameOfProcess, '/') +1 ;&#xD;&#xA;                        else&#xD;&#xA;                            chrptr_StringToCompare = chrarry_NameOfProcess ;&#xD;&#xA;    &#xD;&#xA;                        //printf(""""Process name: %s\n"""", chrarry_NameOfProcess);&#xD;&#xA;                        //printf(""""Pure Process name: %s\n"""", chrptr_StringToCompare );&#xD;&#xA;    &#xD;&#xA;                        if ( CompareFunction(chrptr_StringToCompare, cchrptr_ProcessName, intCaseSensitiveness) )&#xD;&#xA;                        {&#xD;&#xA;                            pid_ProcessIdentifier = (pid_t) atoi(de_DirEntity->d_name) ;&#xD;&#xA;                            closedir(dir_proc) ;&#xD;&#xA;                            return pid_ProcessIdentifier ;&#xD;&#xA;                        }&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;        closedir(dir_proc) ;&#xD;&#xA;        return pid_ProcessIdentifier ;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    #ifdef __cplusplus&#xD;&#xA;        pid_t GetPIDbyName(const char* cchrptr_ProcessName)&#xD;&#xA;        {&#xD;&#xA;            return GetPIDbyName(cchrptr_ProcessName, CASE_INSENSITIVE, EXACT_MATCH) ;&#xD;&#xA;        }&#xD;&#xA;    #else&#xD;&#xA;        // C cannot overload functions - fixed&#xD;&#xA;        pid_t GetPIDbyName_Wrapper(const char* cchrptr_ProcessName, ... )&#xD;&#xA;        {&#xD;&#xA;            int intTempArgument ;&#xD;&#xA;            int intInputArguments[2] ;&#xD;&#xA;            // intInputArguments[0] = 0 ;&#xD;&#xA;            // intInputArguments[1] = 0 ;&#xD;&#xA;            memset(intInputArguments, 0, sizeof(intInputArguments) ) ;&#xD;&#xA;            int intInputIndex ;&#xD;&#xA;            va_list argptr;&#xD;&#xA;    &#xD;&#xA;            va_start( argptr, cchrptr_ProcessName );&#xD;&#xA;                for (intInputIndex = 0;  (intTempArgument = va_arg( argptr, int )) != 15; ++intInputIndex)&#xD;&#xA;                {&#xD;&#xA;                    intInputArguments[intInputIndex] = intTempArgument ;&#xD;&#xA;                }&#xD;&#xA;            va_end( argptr );&#xD;&#xA;            return GetPIDbyName_implements(cchrptr_ProcessName, intInputArguments[0], intInputArguments[1]);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        #define GetPIDbyName(ProcessName,...) GetPIDbyName_Wrapper(ProcessName, ##__VA_ARGS__, (int) 15)&#xD;&#xA;    &#xD;&#xA;    #endif&#xD;&#xA;    &#xD;&#xA;    int main()&#xD;&#xA;    {&#xD;&#xA;        pid_t pid = GetPIDbyName(""""bash"""") ; // If -1 = not found, if -2 = proc fs access error&#xD;&#xA;        printf(""""PID %d\n"""", pid);&#xD;&#xA;        return EXIT_SUCCESS ;&#xD;&#xA;    }","155077;1062765",2,0,4,10161.5058333333,1,1,1,0.5,0.5,2
"-524004736445935217",2,2,"11578578;6410839","11578674;6410839","714968;714968",";","2012-07-20 11:44:01;2011-06-20 12:06:01","5;7",166,TRUE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,"    import java.awt.*;&#xD;&#xA;    import java.util.regex.PatternSyntaxException;&#xD;&#xA;    import javax.swing.*;&#xD;&#xA;    import javax.swing.event.*;&#xD;&#xA;    import javax.swing.table.*;&#xD;&#xA;    &#xD;&#xA;    public class TableFilterSorter extends JPanel {&#xD;&#xA;    &#xD;&#xA;        private boolean DEBUG = false;&#xD;&#xA;        private static final long serialVersionUID = 1L;&#xD;&#xA;    &#xD;&#xA;        public TableFilterSorter() {&#xD;&#xA;            super(new BorderLayout(5, 5));&#xD;&#xA;            final JTextField filterCpText = new JTextField();&#xD;&#xA;            filterCpText.setFont(new Font(""""Serif"""", Font.BOLD, 28));&#xD;&#xA;            filterCpText.setForeground(Color.BLUE);&#xD;&#xA;            filterCpText.setBackground(Color.LIGHT_GRAY);&#xD;&#xA;            JPanel filterCpPanel = new JPanel();&#xD;&#xA;            filterCpPanel.setLayout(new BorderLayout(5, 5));&#xD;&#xA;            filterCpPanel.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));&#xD;&#xA;            filterCpPanel.setBackground(Color.LIGHT_GRAY);&#xD;&#xA;            filterCpPanel.setPreferredSize(new Dimension(300, 30));&#xD;&#xA;            filterCpPanel.add(filterCpText, BorderLayout.CENTER);&#xD;&#xA;            add(filterCpPanel, BorderLayout.NORTH);&#xD;&#xA;            final JTable table = new JTable(new MyTableModel());&#xD;&#xA;            table.setPreferredScrollableViewportSize(new Dimension(500, 160));&#xD;&#xA;            table.setFillsViewportHeight(true);&#xD;&#xA;            JScrollPane scrollPane = new JScrollPane(table);&#xD;&#xA;            add(scrollPane, BorderLayout.CENTER);&#xD;&#xA;            TableModel myTableModel = table.getModel();&#xD;&#xA;            final TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>(myTableModel);&#xD;&#xA;            table.setRowSorter(sorter);&#xD;&#xA;            filterCpText.getDocument().addDocumentListener(new DocumentListener() {&#xD;&#xA;    &#xD;&#xA;                private void searchFieldChangedUpdate(DocumentEvent evt) {&#xD;&#xA;                    String text = filterCpText.getText();&#xD;&#xA;                    if (text.length() == 0) {&#xD;&#xA;                        sorter.setRowFilter(null);&#xD;&#xA;                        table.clearSelection();&#xD;&#xA;                    } else {&#xD;&#xA;                        try {&#xD;&#xA;                            sorter.setRowFilter(RowFilter.regexFilter(""""(?i)"""" + text, 4));&#xD;&#xA;                            table.clearSelection();&#xD;&#xA;                        } catch (PatternSyntaxException pse) {&#xD;&#xA;                            JOptionPane.showMessageDialog(null, """"Bad regex pattern"""",&#xD;&#xA;                                    """"Bad regex pattern"""", JOptionPane.ERROR_MESSAGE);&#xD;&#xA;                        }&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;    &#xD;&#xA;                @Override&#xD;&#xA;                public void insertUpdate(DocumentEvent evt) {&#xD;&#xA;                    searchFieldChangedUpdate(evt);&#xD;&#xA;                }&#xD;&#xA;    &#xD;&#xA;                @Override&#xD;&#xA;                public void removeUpdate(DocumentEvent evt) {&#xD;&#xA;                    searchFieldChangedUpdate(evt);&#xD;&#xA;                }&#xD;&#xA;    &#xD;&#xA;                @Override&#xD;&#xA;                public void changedUpdate(DocumentEvent evt) {&#xD;&#xA;                    searchFieldChangedUpdate(evt);&#xD;&#xA;                }&#xD;&#xA;            });&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        private class MyTableModel extends AbstractTableModel {&#xD;&#xA;    &#xD;&#xA;            private static final long serialVersionUID = 1L;&#xD;&#xA;            private String[] columnNames = {""""First Name"""", """"Last Name"""", """"Sport"""", """"# of Years"""", """"Vegetarian""""};&#xD;&#xA;            private Object[][] data = {&#xD;&#xA;                {""""Mary"""", """"Campione"""", """"Snowboarding"""", new Integer(5), false},&#xD;&#xA;                {""""Alison"""", """"Huml"""", """"Rowing"""", new Integer(3), true},&#xD;&#xA;                {""""Kathy"""", """"Walrath"""", """"Knitting"""", new Integer(2), false},&#xD;&#xA;                {""""Sharon"""", """"Zakhour"""", """"Speed reading"""", new Integer(20), true},&#xD;&#xA;                {""""Philip"""", """"Milne"""", """"Pool"""", new Integer(10), false},&#xD;&#xA;                {""""Mary"""", """"Campione"""", """"Snowboarding"""", new Integer(5), false},&#xD;&#xA;                {""""Alison"""", """"Huml"""", """"Rowing"""", new Integer(3), true},&#xD;&#xA;                {""""Kathy"""", """"Walrath"""", """"Knitting"""", new Integer(2), false},&#xD;&#xA;                {""""Sharon"""", """"Zakhour"""", """"Speed reading"""", new Integer(20), true},&#xD;&#xA;                {""""Philip"""", """"Milne"""", """"Pool"""", new Integer(10), false},};&#xD;&#xA;    &#xD;&#xA;            @Override&#xD;&#xA;            public int getColumnCount() {&#xD;&#xA;                return columnNames.length;&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            @Override&#xD;&#xA;            public int getRowCount() {&#xD;&#xA;                return data.length;&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            @Override&#xD;&#xA;            public String getColumnName(int col) {&#xD;&#xA;                return columnNames[col];&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            @Override&#xD;&#xA;            public Object getValueAt(int row, int col) {&#xD;&#xA;                return data[row][col];&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            @Override&#xD;&#xA;            public Class<?> getColumnClass(int c) {&#xD;&#xA;                return getValueAt(0, c).getClass();&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            @Override&#xD;&#xA;            public boolean isCellEditable(int row, int col) {&#xD;&#xA;                if (col < 2) {&#xD;&#xA;                    return false;&#xD;&#xA;                } else {&#xD;&#xA;                    return true;&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            @Override&#xD;&#xA;            public void setValueAt(Object value, int row, int col) {&#xD;&#xA;                if (DEBUG) {&#xD;&#xA;                    System.out.println(""""Setting value at """" + row + """","""" + col&#xD;&#xA;                            + """" to """" + value + """" (an instance of """" + value.getClass() + """")"""");&#xD;&#xA;                }&#xD;&#xA;                data[row][col] = value;&#xD;&#xA;                fireTableCellUpdated(row, col);&#xD;&#xA;                if (DEBUG) {&#xD;&#xA;                    System.out.println(""""New value of data:"""");&#xD;&#xA;                    printDebugData();&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            private void printDebugData() {&#xD;&#xA;                int numRows = getRowCount();&#xD;&#xA;                int numCols = getColumnCount();&#xD;&#xA;                for (int i = 0; i < numRows; i++) {&#xD;&#xA;                    System.out.print(""""    row """" + i + """":"""");&#xD;&#xA;                    for (int j = 0; j < numCols; j++) {&#xD;&#xA;                        System.out.print(""""  """" + data[i][j]);&#xD;&#xA;                    }&#xD;&#xA;                    System.out.println();&#xD;&#xA;                }&#xD;&#xA;                System.out.println(""""--------------------------"""");&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        private static void createAndShowGUI() {&#xD;&#xA;            JFrame frame = new JFrame(""""TableDemo"""");&#xD;&#xA;            frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);&#xD;&#xA;            TableFilterSorter newContentPane = new TableFilterSorter();&#xD;&#xA;            newContentPane.setOpaque(true);&#xD;&#xA;            frame.setContentPane(newContentPane);&#xD;&#xA;            frame.setLocation(150, 150);&#xD;&#xA;            frame.pack();&#xD;&#xA;            frame.setVisible(true);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public static void main(String[] args) {&#xD;&#xA;            javax.swing.SwingUtilities.invokeLater(new Runnable() {&#xD;&#xA;    &#xD;&#xA;                @Override&#xD;&#xA;                public void run() {&#xD;&#xA;                    createAndShowGUI();&#xD;&#xA;                }&#xD;&#xA;            });&#xD;&#xA;        }&#xD;&#xA;    }","714968",1,0,6,9503.63333333333,1,1,2,0.5,0.5,2
"254708392302529379",2,2,"25713041;19579335","25713116;19753978","1887297;1827213",";","2014-09-07 17:49:52;2013-11-03 14:23:05","2;11",30,FALSE,TRUE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,"    .animate-show.ng-hide-add, &#xD;&#xA;    .animate-show.ng-hide-remove {&#xD;&#xA;      -webkit-transition:all linear 0.5s;&#xD;&#xA;      -moz-transition:all linear 0.5s;&#xD;&#xA;      -o-transition:all linear 0.5s;&#xD;&#xA;      transition:all linear 0.5s;&#xD;&#xA;      display:block!important;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    .animate-show.ng-hide-add.ng-hide-add-active,&#xD;&#xA;    .animate-show.ng-hide-remove {&#xD;&#xA;      line-height:0;&#xD;&#xA;      opacity:0;&#xD;&#xA;      padding:0 10px;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    .animate-show.ng-hide-add,&#xD;&#xA;    .animate-show.ng-hide-remove.ng-hide-remove-active {&#xD;&#xA;      line-height:20px;&#xD;&#xA;      opacity:1;&#xD;&#xA;      padding:10px;&#xD;&#xA;      border:1px solid black;&#xD;&#xA;      background:white;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    .check-element {&#xD;&#xA;      padding:10px;&#xD;&#xA;      border:1px solid black;&#xD;&#xA;      background:white;&#xD;&#xA;    }","1887297;1827213",2,0,6.5,7395.44638888889,0,2,1,0,1,3
"2445178742409368966",2,2,"21875899;21873625","21899531;21899572","2518644;2518644",";","2014-02-20 06:05:11;2014-02-20 06:06:53","0;3",40,FALSE,TRUE,FALSE,TRUE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,".item:hover h6 {&#xD;&#xA;        margin-top: 20px;&#xD;&#xA;        font-size: 14px;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    .item:hover .moreBtn img {&#xD;&#xA;        margin-top: 4px;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    .item:hover .moreBtn {&#xD;&#xA;        position: relative;&#xD;&#xA;        font-size: 16px;&#xD;&#xA;        margin-right: 10px;&#xD;&#xA;        margin-top: 40px;&#xD;&#xA;        color: red;&#xD;&#xA;        text-shadow: 0px 1px 0px;&#xD;&#xA;        font-family: Helvetica;&#xD;&#xA;        font-weight:bold;&#xD;&#xA;        text-style:italic;&#xD;&#xA;        }&#xD;&#xA;    .item:hover .pillBtn {&#xD;&#xA;        -webkit-border-radius: 5px 5px 5px 5px;&#xD;&#xA;        border-radius: 5px 5px 5px 5px;&#xD;&#xA;        background:#7CDD97;&#xD;&#xA;        padding: 21px 70px 21.0px 70px;&#xD;&#xA;        color: #FFF;&#xD;&#xA;        font-weight: bold;&#xD;&#xA;        font-size: 20px;&#xD;&#xA;        text-decoration: none;&#xD;&#xA;    }&#xD;&#xA;    .item:hover {&#xD;&#xA;        background:#F3F3F3;&#xD;&#xA;        height: 70px;&#xD;&#xA;        -webkit-border-radius: 5px 5px 5px 5px;&#xD;&#xA;        border-radius: 5px 5px 5px 5px;&#xD;&#xA;    }&#xD;&#xA;    .item:hover .media-object {&#xD;&#xA;        height: 70px;&#xD;&#xA;        width: 140px;&#xD;&#xA;    }","2518644",1,0,1.5,0.0283333333333333,0,2,2,0,1,3
"-661325852891986688",2,2,"895586;1678555","46335090;46335053","8608949;8608949",";","2017-09-21 03:38:57;2017-09-21 03:33:15","1;0",44,FALSE,FALSE,FALSE,FALSE,TRUE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,"    <h2>Decryption Code</h2>&#xD;&#xA;    @using (Html.BeginForm())&#xD;&#xA;    {&#xD;&#xA;        <table class=""""table-bordered table"""">&#xD;&#xA;            <tr>&#xD;&#xA;                <th>Encryption Code</th>&#xD;&#xA;                <td><input type=""""text"""" id=""""txtEncrypt"""" name=""""txtEncrypt"""" placeholder=""""Enter Encryption Code"""" /></td>&#xD;&#xA;            </tr>&#xD;&#xA;            <tr>&#xD;&#xA;                <td colspan=""""2"""">&#xD;&#xA;                    <span style=""""color:red"""">@ViewBag.GetDecryptCode</span>&#xD;&#xA;                </td>&#xD;&#xA;            </tr>&#xD;&#xA;            <tr>&#xD;&#xA;                    <td colspan=""""2"""">&#xD;&#xA;                        <input type=""""submit"""" id=""""btnEncrypt"""" name=""""btnEncrypt""""value=""""Decrypt to Encrypt code"""" />&#xD;&#xA;                    </td>&#xD;&#xA;                </tr>&#xD;&#xA;        </table>&#xD;&#xA;    }&#xD;&#xA;        <br />&#xD;&#xA;        <br />&#xD;&#xA;        <br />&#xD;&#xA;        <h2>Encryption Code</h2>&#xD;&#xA;    @using (Html.BeginForm())&#xD;&#xA;    {&#xD;&#xA;        <table class=""""table-bordered table"""">&#xD;&#xA;            <tr>&#xD;&#xA;                <th>Decryption Code</th>&#xD;&#xA;                <td><input type=""""text"""" id=""""txtDecrypt"""" name=""""txtDecrypt"""" placeholder=""""Enter Decryption Code"""" /></td>&#xD;&#xA;            </tr>&#xD;&#xA;    &#xD;&#xA;            <tr>&#xD;&#xA;                <td colspan=""""2"""">&#xD;&#xA;                    <span style=""""color:red"""">@ViewBag.GetEncryptionCode</span>&#xD;&#xA;                </td>&#xD;&#xA;            </tr>&#xD;&#xA;            <tr>&#xD;&#xA;                <td colspan=""""2"""">&#xD;&#xA;                    <input type=""""submit"""" id=""""btnDecryt"""" name=""""btnDecryt"""" value=""""Encrypt to Decrypt code"""" />&#xD;&#xA;                </td>&#xD;&#xA;            </tr>&#xD;&#xA;        </table>&#xD;&#xA;    }","8608949",1,0,0.5,0.095,0,2,2,0,1,3
"-7053989583110035266",2,2,"46119329;51742147","50388143;51742147","5689127;3032338",";","2018-05-17 09:37:22;2018-08-08 08:33:56","0;1",60,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,"    /**&#xD;&#xA;     * This file includes polyfills needed by Angular and is loaded before the app.&#xD;&#xA;     * You can add your own extra polyfills to this file.&#xD;&#xA;     *&#xD;&#xA;     * This file is divided into 2 sections:&#xD;&#xA;     *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.&#xD;&#xA;     *   2. Application imports. Files imported after ZoneJS that should be loaded before your main&#xD;&#xA;     *      file.&#xD;&#xA;     *&#xD;&#xA;     * The current setup is for so-called """"evergreen"""" browsers; the last versions of browsers that&#xD;&#xA;     * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),&#xD;&#xA;     * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.&#xD;&#xA;     *&#xD;&#xA;     * Learn more in https://angular.io/docs/ts/latest/guide/browser-support.html&#xD;&#xA;     */&#xD;&#xA;    &#xD;&#xA;    /***************************************************************************************************&#xD;&#xA;     * BROWSER POLYFILLS&#xD;&#xA;     */&#xD;&#xA;    &#xD;&#xA;    /** IE9, IE10 and IE11 requires all of the following polyfills. **/&#xD;&#xA;    import 'core-js/es6/symbol';&#xD;&#xA;    import 'core-js/es6/object';&#xD;&#xA;    import 'core-js/es6/function';&#xD;&#xA;    import 'core-js/es6/parse-int';&#xD;&#xA;    import 'core-js/es6/parse-float';&#xD;&#xA;    import 'core-js/es6/number';&#xD;&#xA;    import 'core-js/es6/math';&#xD;&#xA;    import 'core-js/es6/string';&#xD;&#xA;    import 'core-js/es6/date';&#xD;&#xA;    import 'core-js/es6/array';&#xD;&#xA;    import 'core-js/es6/regexp';&#xD;&#xA;    import 'core-js/es6/map';&#xD;&#xA;    // import 'core-js/es6/weak-map';&#xD;&#xA;    import 'core-js/es6/set';&#xD;&#xA;    &#xD;&#xA;    /** IE10 and IE11 requires the following for NgClass support on SVG elements */&#xD;&#xA;    // import 'classlist.js';  // Run `npm install --save classlist.js`.&#xD;&#xA;    &#xD;&#xA;    /** IE10 and IE11 requires the following for the Reflect API. */&#xD;&#xA;    // import 'core-js/es6/reflect';&#xD;&#xA;    &#xD;&#xA;    /** Evergreen browsers require these. **/&#xD;&#xA;    // Used for reflect-metadata in JIT. If you use AOT (and only Angular decorators), you can remove.&#xD;&#xA;    import 'core-js/es7/reflect';&#xD;&#xA;    &#xD;&#xA;    /**&#xD;&#xA;     * Required to support Web Animations `@angular/platform-browser/animations`.&#xD;&#xA;     * Needed for: All but Chrome, Firefox and Opera. http://caniuse.com/#feat=web-animation&#xD;&#xA;     **/&#xD;&#xA;    // import 'web-animations-js';  // Run `npm install --save web-animations-js`.&#xD;&#xA;    &#xD;&#xA;    /***************************************************************************************************&#xD;&#xA;     * Zone JS is required by default for Angular itself.&#xD;&#xA;     */&#xD;&#xA;    import 'zone.js/dist/zone'; // Included with Angular CLI.&#xD;&#xA;    &#xD;&#xA;    /***************************************************************************************************&#xD;&#xA;     * APPLICATION IMPORTS&#xD;&#xA;     */","5689127;3032338",2,0,0.5,1990.94277777778,1,1,1,0.5,0.5,3
"3928379981974834943",2,2,"43021493;4540713","49777913;49777194","5452132;5452132",";","2018-04-11 14:35:43;2018-04-11 14:03:54","0;1",76,TRUE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,"    public class CustomAnnotationApplicationContextProvider {&#xD;&#xA;    private final Vertx vertx;&#xD;&#xA;    public CustomAnnotationApplicationContextProvider(Vertx vertx) {&#xD;&#xA;        this.vertx = vertx;&#xD;&#xA;    }&#xD;&#xA;    /**&#xD;&#xA;     * Register all beans to spring bean factory&#xD;&#xA;     *&#xD;&#xA;     * @param beanFactory, spring bean factory to register your instances&#xD;&#xA;     */&#xD;&#xA;    private void configureBeans(ConfigurableListableBeanFactory beanFactory) {&#xD;&#xA;        beanFactory.registerSingleton(""""vertx"""", vertx);&#xD;&#xA;    }&#xD;&#xA;    /**&#xD;&#xA;     * Proxy method to create {@link AnnotationConfigApplicationContext} instance with no params&#xD;&#xA;     *&#xD;&#xA;     * @return {@link AnnotationConfigApplicationContext} instance&#xD;&#xA;     */&#xD;&#xA;    public AnnotationConfigApplicationContext get() {&#xD;&#xA;        return new AnnotationConfigApplicationContext() {&#xD;&#xA;            @Override&#xD;&#xA;            protected void postProcessBeanFactory(ConfigurableListableBeanFactory beanFactory) {&#xD;&#xA;                super.postProcessBeanFactory(beanFactory);&#xD;&#xA;                configureBeans(beanFactory);&#xD;&#xA;            }&#xD;&#xA;        };&#xD;&#xA;    }&#xD;&#xA;    /**&#xD;&#xA;     * Proxy method to call {@link AnnotationConfigApplicationContext#AnnotationConfigApplicationContext(DefaultListableBeanFactory)} with our logic&#xD;&#xA;     *&#xD;&#xA;     * @param beanFactory bean factory for spring&#xD;&#xA;     * @return&#xD;&#xA;     * @see AnnotationConfigApplicationContext#AnnotationConfigApplicationContext(DefaultListableBeanFactory)&#xD;&#xA;     */&#xD;&#xA;    public AnnotationConfigApplicationContext get(DefaultListableBeanFactory beanFactory) {&#xD;&#xA;        return new AnnotationConfigApplicationContext(beanFactory) {&#xD;&#xA;            @Override&#xD;&#xA;            protected void postProcessBeanFactory(ConfigurableListableBeanFactory beanFactory) {&#xD;&#xA;                super.postProcessBeanFactory(beanFactory);&#xD;&#xA;                configureBeans(beanFactory);&#xD;&#xA;            }&#xD;&#xA;        };&#xD;&#xA;    }&#xD;&#xA;    /**&#xD;&#xA;     * Proxy method to call {@link AnnotationConfigApplicationContext#AnnotationConfigApplicationContext(Class[])} with our logic&#xD;&#xA;     *&#xD;&#xA;     * @param annotatedClasses, set of annotated classes for spring&#xD;&#xA;     * @return&#xD;&#xA;     * @see AnnotationConfigApplicationContext#AnnotationConfigApplicationContext(Class[])&#xD;&#xA;     */&#xD;&#xA;    public AnnotationConfigApplicationContext get(Class<?>... annotatedClasses) {&#xD;&#xA;        return new AnnotationConfigApplicationContext(annotatedClasses) {&#xD;&#xA;            @Override&#xD;&#xA;            protected void postProcessBeanFactory(ConfigurableListableBeanFactory beanFactory) {&#xD;&#xA;                super.postProcessBeanFactory(beanFactory);&#xD;&#xA;                configureBeans(beanFactory);&#xD;&#xA;            }&#xD;&#xA;        };&#xD;&#xA;    }&#xD;&#xA;    /**&#xD;&#xA;     * proxy method to call {@link AnnotationConfigApplicationContext#AnnotationConfigApplicationContext(String...)} with our logic&#xD;&#xA;     *&#xD;&#xA;     * @param basePackages set of base packages for spring&#xD;&#xA;     * @return&#xD;&#xA;     * @see AnnotationConfigApplicationContext#AnnotationConfigApplicationContext(String...)&#xD;&#xA;     */&#xD;&#xA;    public AnnotationConfigApplicationContext get(String... basePackages) {&#xD;&#xA;        return new AnnotationConfigApplicationContext(basePackages) {&#xD;&#xA;            @Override&#xD;&#xA;            protected void postProcessBeanFactory(ConfigurableListableBeanFactory beanFactory) {&#xD;&#xA;                super.postProcessBeanFactory(beanFactory);&#xD;&#xA;                configureBeans(beanFactory);&#xD;&#xA;            }&#xD;&#xA;        };&#xD;&#xA;    }&#xD;&#xA;    }","5452132",1,0,0.5,0.530277777777778,0,2,2,0,1,3
